<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jbp.service.dao.OrderDao">

    <select id="getProductNumCount" resultType="java.lang.Integer">
        select IFNULL(sum(od.pay_num),0)
        from eb_order o
        left join eb_order_detail od on o.order_no = od.order_no
        where o.is_del = 0
        and o.refund_status &lt; 3
        and o.cancel_status = 0
        and o.status &lt; 9
        and o.uid = #{uid}
        and od.product_id = #{proId}
        and od.product_type = #{productType}
    </select>

    <select id="findFrontList" resultType="com.jbp.common.model.order.Order" parameterType="Map">
        select * from eb_order
        where
        uid = #{userId}
        <if test="status != null and status &gt;= 0">
            <choose>
                <when test="status == 1">
                    and `status` in (1,2)
                </when>
                <otherwise>
                    and `status` = #{status}
                </otherwise>
            </choose>
        </if>
        and refund_status &lt; 3
        and is_user_del  = 0
        and is_merchant_del  = 0
        and type in (0,2)
        and is_del = 0
        <if test="keywords != null and keywords !='' ">
            and (order_no like CONCAT('%',#{keywords},'%')
                or
                order_no in (select order_no from eb_order_detail where product_name like CONCAT('%',#{keywords},'%')))
        </if>
        order by id desc
    </select>
    <select id="getGoodsPirce" resultType="java.math.BigDecimal">

    select ifnull(sum(o.pay_price),0) from eb_order o

    where o.paid = 1 and o.plat_order_no in (select order_no from eb_order_detail where product_id in (${goodsIds}) )
     and   DATE_FORMAT( o.`pay_Time`,'%Y-%m') =  DATE_FORMAT(#{month},'%Y-%m')   and o.uid = #{uid}  and o.refund_status = 0

   and o.is_del = 0
    </select>

    <select id="getFgGoodsOrder" resultType="java.util.Map">

        select o.uid, e.product_id,e.bar_code,(e.pay_price -o.total_postage ) pay_price,o.plat_order_no from eb_order_detail e
        left join eb_order o on o.plat_order_no =  e.order_no
        where product_id in (${goodsIds})
           and   DATE_FORMAT( o.`pay_Time`,'%Y-%m') =   #{month}   and o.refund_status = 0   and o.is_del = 0


    </select>
    <select id="salesVolumeDay" resultType="com.jbp.common.response.OrderSalesVolumeResponse">


    select total,day,refund_total,ifnull(user_total,0) as user_total,(total-refund_total ) as ans_total  from(

    select sum(pay_price) as total,DATE_FORMAT( o.`pay_Time`,'%Y-%m-%d') day ,ifnull(r.refund_total,0) as refund_total ,u.user_total from eb_order o

    left join (select sum(r.pay_price) as refund_total ,DATE_FORMAT( r.`pay_Time`,'%Y-%m-%d')  time from eb_order r where r.paid = 1  and r.refund_status >0 and is_del = 0   GROUP BY DATE_FORMAT( r.`pay_Time`,'%Y-%m-%d')  )  r on   DATE_FORMAT( o.`pay_Time`,'%Y-%m-%d')  = r.time

		left join (select count(1)  as user_total,DATE_FORMAT( create_time,'%Y-%m-%d') create_time from eb_user  GROUP BY DATE_FORMAT( create_time,'%Y-%m-%d')) u on  u.create_time= r.time
    where paid = 1  and is_del = 0
    GROUP BY DATE_FORMAT( o.`pay_Time`,'%Y-%m-%d')


    )  as a

       order by day desc


    </select>


</mapper>
